plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://maven.kosmx.dev/" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://api.modrinth.com/maven/" }
}
dependencies {
    modImplementation ("com.terraformersmc:modmenu:${modmenu_version}")
    modImplementation include ("maven.modrinth:midnightlib:${midnightlib_version}")
    modImplementation ("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
    modImplementation include ("dev.kosmx.player-anim:player-animation-lib-fabric:${player_anim}")
    modImplementation ("curse.maven:jade-324717:6155088")
    implementation ('com.squareup.okhttp3:okhttp:4.9.3')
    implementation ('com.google.code.gson:gson:2.9.0')
    minecraft ("com.mojang:minecraft:${minecraft_version}")
    mappings ("net.fabricmc:yarn:${yarn_mappings}:v2")
    modImplementation ("net.fabricmc:fabric-loader:${loader_version}")
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
    }
}
fabricApi {
    configureDataGeneration()
}